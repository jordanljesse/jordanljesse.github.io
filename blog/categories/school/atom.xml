<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: School | Jordan Learns Code]]></title>
  <link href="http://jordanljesse.github.io/blog/categories/school/atom.xml" rel="self"/>
  <link href="http://jordanljesse.github.io/"/>
  <updated>2017-10-23T20:27:49-07:00</updated>
  <id>http://jordanljesse.github.io/</id>
  <author>
    <name><![CDATA[Jordan Jesse]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Day 19 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/23/day-19-check-in/"/>
    <updated>2017-10-23T22:01:14-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/23/day-19-check-in</id>
    <content type="html"><![CDATA[<p>I spent most of my day ‘off’ yesterday building a web app that can get the user’s location data and return the local weather using the Weather Underground API and the <code>navigator.geolocation</code> API built into HTML5. I learned a lot about SSL, HTTPS, and ports 443/80 while attempting(the operative word here) to securely retrieve and transmit the user’s location. You can check out my little weather API experiment <a href="http://codepen.io/jljesse/pen/LzvoJq">here</a>. Additionally, I’m trying to be better about digging into the call stack when I’m debugging; it’s a really helpful tool.<!--more--></p>

<p>I learned a small amount about cryptography and how writing your own crypto can be dangerous. With that in mind, my goal is to implement the salting and hashing of the user’s password by stitching together instructor supplied crypto libraries with a minimum of my own code. Bonus round: today I learned that encryption != hashing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 18 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/21/day-18-check-in/"/>
    <updated>2017-10-21T22:01:14-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/21/day-18-check-in</id>
    <content type="html"><![CDATA[<p>This morning was rough; I felt like I wrote more bugs than functioning code. I’m trying to encrypt the user’s password before it is sent to the server and ran into some trouble with the <code>salt</code> portion of the encryption. Nevertheless, I’m getting more confident in my ability to debug things, knowing which tools to use, and how to follow the flow of data through my application from the user’s input on the front end to the database in the back end. By the late evening, I had my second component mostly complete and felt like I was able to learn from most of this morning’s missteps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 17 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/20/day-17-check-in/"/>
    <updated>2017-10-20T22:51:37-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/20/day-17-check-in</id>
    <content type="html"><![CDATA[<p>I started working on my second component today and it was different from the first in that it already contained a bunch of code that I had to work around, which provided some extra challenges. The main thing I learned about today was encryption and how to apply it to a user’s password; trying to handle the password so that it’s secure is tricky business however I’m really enjoying the challenge.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 16 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/19/day-16-check-in/"/>
    <updated>2017-10-19T23:23:45-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/19/day-16-check-in</id>
    <content type="html"><![CDATA[<p>So I thought I finished my full stack component yesterday, however I added some validation to the API I wrote with C#… and it broke. As a result, today I learned how to troubleshoot The Unity framework configuration, how to implement validation on the server(as opposed to client side), and how to improve my debugging by digging into the call stack more.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 15 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/18/day-15-check-in/"/>
    <updated>2017-10-18T23:18:23-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/18/day-15-check-in</id>
    <content type="html"><![CDATA[<p>I finished up my full stack component last night and spent today giving it some styling and then integrating it into the main project. I learned some fancy git commands like <code>git log --all --graph --pretty=oneline</code> and how do deal with merge conflicts(edit by hand with attention to detail). Reading and writing code is feeling more natural with each day. I finally installed the Vim plugin in Visual Studio so that I can start moving around my code more nimbly! I find myself marveling at how clever Vim is ever time I use it - my goal is to be a Vim wizard by the end of this year.</p>
]]></content>
  </entry>
  
</feed>
