<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: School | Jordan Learns Code]]></title>
  <link href="http://jordanljesse.github.io/blog/categories/school/atom.xml" rel="self"/>
  <link href="http://jordanljesse.github.io/"/>
  <updated>2017-10-31T13:58:01-07:00</updated>
  <id>http://jordanljesse.github.io/</id>
  <author>
    <name><![CDATA[Jordan Jesse]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Day 25 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/30/day-25-check-in/"/>
    <updated>2017-10-30T23:46:52-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/30/day-25-check-in</id>
    <content type="html"><![CDATA[<p>I had an idea for an app last night that I really want to build, so I’m using it as an excuse to run through making a full stack CRUD app again with Angular/.NET/SQL. It’s a web app to help unlicensed social workers track the hours required for their licensure. After hearing a few social workers frustrated with the process of tracking their hours it seemed like an app that could store the hours and return some meaningful analysis to the user would be the way forward - certainly more convenient than an Excel spreadsheet.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 24 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/28/day-24-check-in/"/>
    <updated>2017-10-28T22:23:39-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/28/day-24-check-in</id>
    <content type="html"><![CDATA[<p>I’m working on a new feature that involves building a custom tag in Angular that incorporates an open source project. I’ve made a personal goal of solving a new algorithm challenge on <a href="https://www.hackerrank.com">Hacker Rank</a> every day for the rest of this year. We’ll see how it goes!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 23 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/27/day-23-check-in/"/>
    <updated>2017-10-27T21:40:04-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/27/day-23-check-in</id>
    <content type="html"><![CDATA[<p>Today we learned more about data structures, binary trees, and how to traverse a binary tree using recursion. I’d always perceived binary trees as some scary part of the interview process based off of the complaints of tech interviewees, however they didn’t seem that complex and traversal via recursion made really good sense.<!--more--></p>

<p>Additionally, today I learned that if you want a little green square to show up on your GitHub commit graph that your name and email, specifically the email you login to GitHub with, need to be configured in git. Good to know!</p>

<h2 id="recursion">Recursion</h2>

<h3 id="binary-tree-traversal">Binary Tree Traversal</h3>

<h5 id="preorder">Preorder</h5>
<ul>
  <li>node(contains contents, left child, and right child)</li>
  <li>traversal function uses recursion</li>
  <li>print the parents before the children</li>
</ul>

<h5 id="postorder">Postorder</h5>
<ul>
  <li>print the children before printing the parents</li>
</ul>

<h5 id="inorder">Inorder</h5>
<ul>
  <li>print the left child, print the parent, then print the right child</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 22 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/26/day-22-check-in/"/>
    <updated>2017-10-26T21:40:04-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/26/day-22-check-in</id>
    <content type="html"><![CDATA[<p>Today we we got into the nuts and bolts of how to build custom tags and components in AngularJS, data binding characters to be used with custom directives, and how to handle git merge conflicts. Additionally, I <em>finally</em> figured out how to handle salting a SHA1 hashed password and validating the user login and registration, subsequently returning a cookie to the logged in user!<!--more--></p>

<h3 id="data-binding-characters">Data Binding Characters</h3>
<ul>
  <li><code>&lt;</code> one-way data binding</li>
  <li><code>=</code> two-way data binding</li>
  <li><code>@</code> access a string value passed into a directive</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 21 Check In]]></title>
    <link href="http://jordanljesse.github.io/blog/2017/10/25/day-21-check-in/"/>
    <updated>2017-10-25T22:05:24-05:00</updated>
    <id>http://jordanljesse.github.io/blog/2017/10/25/day-21-check-in</id>
    <content type="html"><![CDATA[<p>Today was a blur. I continued to build the registration and login feature for this app with Angular and .NET. I gave my first code talk tonight; it was about what vim is and why you would want to use it. I thought it was Thursday all day and it’s actually Wednesday; it’s been one of those weeks.</p>
]]></content>
  </entry>
  
</feed>
